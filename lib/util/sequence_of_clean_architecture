beginning from UI logic:

 view:
        pages

 domain:
        entity


1) data:
        network_services:
                         appTitle_api_services (CRUD)
                         network_services (Dio singleton)

2) remote_storage:
        pageTitle_service (Response + parsing JSON).                  in method(Parameters if needs)

3) domain:
         repo:
              i_pageTitle_repo.                                       in method(Parameters if needs)

4) data:
         repo:
              pageTitleRepo impl i_pageTitle_repo.                    in method(Parameters if needs)
              + inject pageTitleService

5) domain:
         usecase:
                 IPageTitle_usecase (call method)                     in method(Parameters if needs)
                 pageTitle_usecase impl IpageTitle_usecase
                 + inject IpageTitleRepo

6) view:
        block:
             in bloc inject IPageTitleUsecase
             in LOADING call _iPageTitleUsecase.call();               in method(Parameters if needs)


7) dependency_injection:

8) dependency_injection method setup in main

9) integration bloc in page via import 'package:appTitle/dependency_injection.dart' as di;
   + inject singleton final ..Bloc _..Bloc = di.getIt.get();
